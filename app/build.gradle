apply plugin: 'com.android.application'


ext.versionMajor = 1
ext.versionMinor = 0
ext.versionPatch = 1

def computeVersionName() {
    return String.format('%d.%d.%d', versionMajor, versionMinor, versionPatch)
}

def computeVersionCode() {
    return (versionMajor * 1000000) + (versionMinor * 100000) + (versionPatch * 10000) + Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "org.pepzer.mqttdroid"
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName computeVersionName()
        versionCode computeVersionCode()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        jenkins {
            keyAlias alias
            keyPassword keyPass
            storeFile file(keystore)
            storePassword storePass
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// for use in local builds
if (keystore != "default") {
    android.buildTypes.debug.signingConfig = android.signingConfigs.jenkins
}

dependencies {
    implementation (project(':mqttservice')){
        transitive=true
    }
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest:2.2'
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'
}
